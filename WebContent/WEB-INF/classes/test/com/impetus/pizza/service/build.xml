<?xml version="1.0" encoding="UTF-8"?>
<project name="OnlineShop" basedir="../" default="main">
	<property file="build.properties" />

	<target name="usage">
		<echo message="" />
		<echo message="${name} build file" />
		<echo message="-----------------------------------" />
		<echo message="" />
		<echo message="Available targets are:" />
		<echo message="" />
		<echo message="build     --> Build the application" />
		<echo message="deploy    --> Deploy application as directory" />
		<echo message="deploywar --> Deploy application as a WAR file" />
		<echo message="install   --> Install application in Tomcat" />
		<echo message="reload    --> Reload application in Tomcat" />
		<echo message="start     --> Start Tomcat application" />
		<echo message="stop      --> Stop Tomcat application" />
		<echo message="list      --> List Tomcat applications" />
		<echo message="" />
	</target>

	<property name="src.dir" value="src" />
	<property name="web.dir" value="WebContent" />
	<property name="build.dir" value="${web.dir}/WEB-INF/classes" />
	<property name="name" value="OnlineShop" />
	<property name="dest.path" location="OnlineShop" />
	<property name="build1.dir" value="D:/apache-tomcat-7.0.26" />
	<property name="report" location="report" />
	<property name="checkstyle.reports" location="${report}/checkstyle_report" />
	<property name="junit.report" location="${report}/junit" />
	<property name="findbug.reports" location="${report}/findbug_report" />
	<property name="lib" value="${web.dir}/WEB-INF/lib">
	</property>
	<property name="bin" value="report/bin">
	</property>

	<target name="clean">
		<delete dir="${dest.path}" />
	</target>

	<!--	<target name="init">
		<delete dir="${checkstyle.report}" />
		<delete dir="${junit.report}" />
		<delete dir="${findbug.report}" />

		<mkdir dir="${checkstyle.report}" />
		<mkdir dir="${junit.report}" />
		<mkdir dir="${findbug.report}" />
	</target> -->

	<path id="master-classpath">
		<fileset dir="${web.dir}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<!-- We need the servlet API classes: -->
		<fileset dir="${appserver.lib}">
			<include name="servlet*.jar" />
		</fileset>
		<pathelement path="${build1.dir}" />
	</path>

	<target name="build" description="Compile main source tree java files">
		<mkdir dir="${build.dir}" />
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}" includes="**/*.properties" />
		</copy>
		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="master-classpath" />
		</javac>
	</target>

	<target name="deploy" depends="build" description="Deploy application">
		<copy todir="${deploy.path}/${name}" preservelastmodified="true">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="deploywar" depends="build" description="Deploy application as a WAR file">
		<war destfile="${name}.war" webxml="${web.dir}/WEB-INF/web.xml">
			<fileset dir="${web.dir}">
				<include name="**/*.*" />
			</fileset>
		</war>
		<copy todir="${deploy.path}" preservelastmodified="true">
			<fileset dir=".">
				<include name="*.war" />
			</fileset>
		</copy>
	</target>


	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.*" />
		</fileset>
	</path>

	<target name="compile">
		<javac srcdir="${src.dir}" destdir="${bin}" debug="yes" includeantruntime="false">
			<classpath refid="classpath" />
		</javac>
	</target>

	<!--<target name="test" depends="compile">
		<junit fork="yes" dir="." forkmode="once">
			<classpath location="${lib}" />		
			<formatter type="xml" />
			<batchtest todir="${junit.report}">
			<fileset dir="src/test/com/impetus/pizza/service">
				<include name="/*Test.java" />
			</fileset>
			</batchtest>
		</junit>
	<junitreport todir="${junit.report}">
			<fileset dir="${junit.report}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${junit.report}" />
	</junitreport>
   </target>-->


	<taskdef resource="checkstyletask.properties" classpath="../checkstyle-5.0/checkstyle-all-5.0.jar" />

	<target name="checkstyle" description="Generates a report of code convention violations.">
		<checkstyle config="checkstyle-5.0/CheckStyle_CodingStandard.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<formatter type="xml" tofile="${checkstyle.reports}/checkstyle_report.xml" />
			<fileset dir="${src.dir}/com" includes="**/*.java" />
		</checkstyle>
		<style in="${checkstyle.reports}/checkstyle_report.xml" out="${checkstyle.reports}/checkstyle_report.html" style="checkstyle-5.0/checkstyle-simple.xsl" />
	</target>

	<property name="findbugs.home" value="findbugs-1.3.8" />
	<taskdef name="findbugs" classpath="../../findbugs-1.3.8/findbugs-ant.jar" classname="edu.umd.cs.findbugs.anttask.FindBugsTask" />

	<target name="findbugs">
		<findbugs home="${findbugs.home}" output="html" outputFile="${findbug.reports}/findbugs_report.html" jvmargs="-Xms512M -Xmx750M ">
			<sourcePath path="src/com" />
			<class location="${build.dir}" />
		</findbugs>
	</target>

	<taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
		<classpath path="D:\ANT\lib" />
	</taskdef>

	<!-- Add the target -->
	<target name="sonar">
		<!-- list of mandatories Sonar properties -->
		<property name="sonar.sources" value="${src.dir}" />

		<!-- list of optional Sonar properties -->
		<property name="sonar.projectName" value="OnlineShop" />
		<property name="sonar.binaries" value="${build1.dir}" />
		<property name="sonar.tests" value="test/com/impetus/pizza/service" />
		<property name="sonar.libraries" value="${lib}" />
		<property name="sonar.java.source" value="1.6" />

		<sonar:sonar key="org.example:example" version="0.1-SNAPSHOT" xmlns:sonar="antlib:org.sonar.ant" />
	</target>

	<target name="install" description="Install application in Tomcat">
		<install url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" war="${name}" />
	</target>

	<target name="reload" description="Reload application in Tomcat">
		<reload url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="start" description="Start Tomcat application">
		<start url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />

	</target>

	<target name="stop" description="Stop Tomcat application">
		<stop url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" path="/${name}" />
	</target>

	<target name="list" description="List Tomcat applications">
		<list url="${tomcat.manager.url}" username="${tomcat.manager.username}" password="${tomcat.manager.password}" />
	</target>
	
	<target name="instrument">
		<delete file="cobertura.ser" />
		<cobertura-instrument todir="${coverage.reports}" maxmemory="512M">
			<fileset dir="${build.dir}/com">
				<exclude name="*Controller.class" />
			</fileset>
		</cobertura-instrument>
	</target>

	<target name="unit_tests" description="Execute all junit tests">
		<junit fork="yes">
			<sysproperty key="net.sourceforge.cobertura.datafile" file="cobertura.ser" />
			<classpath location="${coverage.reports}" />
			<classpath location="${build.dir}" />
			<classpath>
				<fileset dir="${lib}">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<formatter type="brief" usefile="false" />
			<test name="test.com.impetus.pizza.service.AllTest" />
		</junit>
	</target>

	<target name="unit_test_reports">
		<mkdir dir="${build.dir}/test/reports" />
		<mkdir dir="${test.reports}" />
		<junit fork="yes" printsummary="no" haltonfailure="no">
			<batchtest fork="yes" todir="${test.reports}">
				<fileset dir="${build.dir}">
					<include name="**/*Test.class" />
				</fileset>
			</batchtest>
			<formatter type="xml" />
			<classpath refid="master-classpath" />
		</junit>

		<junitreport todir="${test.reports}">
			<fileset dir="${test.reports}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${test.reports}" />
		</junitreport>
	</target>
	
	<taskdef classpathref="master-classpath" resource="tasks.properties" />
	
	<target name="coverage-report">
		<mkdir dir="${coverage.reports}\reports" />
		<cobertura-report srcdir="${src.dir}" destdir="${coverage.reports}\reports" />
		<cobertura-report format="xml" destdir="${coverage.reports}\reports">
			<fileset dir="${coverage.reports}">
				<include name="**/com*.class" />
			</fileset>
		</cobertura-report>
	</target>
	<!-- End Tomcat tasks -->

	<target name="main" depends="unit_tests,unit_test_reports"/>
	<!--<target name="main" depends="clean,checkstyle,findbugs,compile,instrument,unit_tests,unit_test_reports,coverage-report,sonar,deploy,deploywar" />-->
</project>